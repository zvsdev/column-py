[tool.poetry]
name = "column-py"
version = "0.0.1"
description = "Unoffical Column Python SDK, wth Pydantic, AnyIO, HTTPX"
authors = ["ZVS <zvs@daswolf.dev>"]
readme = "README.md"
homepage = "https://github.com/zvsdev/column-py"
documentation = "https://github.com/zvsdev/column-py"
repository = "https://github.com/zvsdev/column-py"
license = "MIT"
packages = [{include = "column", from="."}]
classifiers = [
    "Framework :: Pydantic",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = ">=2.7.0,<3.0.0"
httpx = ">=0.27.0"
anyio = ">=4.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "8.0.1"
mypy = "1.10.0"
ruff = "0.4.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true

[tool.ruff]
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
lint.ignore = [
    "E501",  # line too long, handled by ruff
]
line-length = 100
indent-width = 4

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "ksuid"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
